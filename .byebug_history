continue
@user_skill = current_user.user_skills.create!(skill_id: @skill.id, rating: Integer(params[:user_skill][:rating]))
@user_skill.save
next
@user_skill
next
continue
@user_skill
continue
next
continue
next
@user_skill
@skill
continue
@user_skill
next
@user_skill
continue
Integer(params[:user_skill][:rating])
Intger(params[:user_skill][:rating])
next
continue
Integer(params[:user_skill][:rating])
params[:user_skill][:rating]
continue
next
continue
@user_skill
next
continue
next
@user_skill
next
continue
params
params[:rating]
continue
@skill.id
@skill
continue
@skill
continue
params[:user_skill][:name]
params[:user_skill][name]
params[:user_skill][nam]e
params[:user_skill].name
params[:user_skill[:name]]
params[:user_skill]
params[:user_skill.name]
params[:name]
params
@skill
next
continue
current_user.has_role? :employee
current_user.has_role? :admin
current_user
config.attr_internal_accessor
config.attr_accessible_role
continue
config.current_user_method(&:current_user)\
config.current_user_method(&:current_user).email
config.current_user_method(&:current_user)
config.current_user_method().email
config.current_user_method()
config.attr_internal_accessor
config.attr_accessible_role {:default}
config
var all
var
help
continue
var all
continue
var all
continue
current_user.id == @user.id
user_signed_in?
@user.id
current_user.id
continue
current_user
current_user?
user_signed_in
user_signed_in?
continue
var all
continue
var all
continue
@user_skills.skill
@user_skills.skills
@user_skills
var instance
continue
var instance
continue
var instance
var local
help local
help var
var help
continue
var all
continue
var all
continue
var all
var
byebug help
help
continue
next
continue
next
continue
n
continue
n
continue
n
continue
n
next
nexr
continue
help
next
help
var @_params
var instance
var const
var args
help var
help
list
var all
var
var params
help
